/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IEISF;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import javafx.scene.effect.GaussianBlur;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import static org.opencv.core.Core.BORDER_DEFAULT;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.core.Point;
import org.opencv.core.Size;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.highgui.HighGui;

/**
 *
 * @author HenHen
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    
    Mat awal;
    Mat result;
    public Main() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        browseImage = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        spatialFilter = new javax.swing.JButton();
        btnSobel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnSub = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        imgResult = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setText("Image Enchantment In Spatial Filtering");

        browseImage.setText("Browse Image");
        browseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseImageActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel2.setText("->");

        spatialFilter.setText("Laplacian");
        spatialFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spatialFilterActionPerformed(evt);
            }
        });

        btnSobel.setText("Sobel");
        btnSobel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSobelActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel3.setText("->");

        btnSub.setText("Substraction");
        btnSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel4.setText("->");

        imgResult.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Averaging");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(spatialFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel4)
                        .addGap(41, 41, 41)
                        .addComponent(btnSub))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(btnSobel)
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(browseImage)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(imgResult, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(browseImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(btnSobel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(spatialFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addComponent(imgResult, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public ImageIcon ResizeImage(String ImagePath)
    {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(imgResult.getWidth(), imgResult.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    
    //to set image size to icon on label
    public ImageIcon ResizeImageIcon(Image img)
    {
        Image newImg = img.getScaledInstance(imgResult.getWidth(), imgResult.getHeight(), img.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(newImg);
        return icon;
    }
    
    //Convert Image To BufferdImage
    public Image convertToBufferedImage(Mat input)
    {
        int type = BufferedImage.TYPE_BYTE_GRAY;
        if(input.channels() > 1)
        {
            type = BufferedImage.TYPE_3BYTE_BGR;
        }
        int bufferSize = input.channels()*input.cols()*input.rows();
        byte[] b = new byte[bufferSize];
        input.get(0, 0, b); //get all pixels
        BufferedImage img = new BufferedImage(input.cols(), input.rows(), type);
        final byte[] targetPixels = ((DataBufferByte) img.getRaster().getDataBuffer()).getData();
        System.arraycopy(b, 0, targetPixels, 0, b.length);
        return img;
    }
    
    //Browse Image to display on program
    private void browseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseImageActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        //set directory default for browse image
        chooser.setCurrentDirectory(new File(System.getProperty("user.home") + System.getProperty("file.separator")+ "Pictures" ) );
        //filter file image
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","png","gif");
        chooser.addChoosableFileFilter(filter);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        txtPath.setText(filename);
        imgResult.setIcon(ResizeImage(filename));
    }//GEN-LAST:event_browseImageActionPerformed
    
    //Spatial Filtering
    public Mat toLaplacian()
    {
        //Loading the OpenCV core library & get image for convert
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        
        String filepath = txtPath.getText();    
        int kernel_size = 3;
        int scale = 1;
        int delta = 0;
        int ddepth = CvType.CV_16S;
        
         //Instantiating the Imgcodecs class
        Imgcodecs imgcode = new Imgcodecs();
        
        //Reading Image
        Mat source = imgcode.imread(filepath);
        
        //Creating the destination matrix
        Mat destination = new Mat();
        
        //Mat gray
        Mat gray = new Mat();
        
        //Mat abs_dst
        Mat abs_dst = new Mat();
        
        // Reduce noise by blurring with a Gaussian filter ( kernel size = 3 )
        Imgproc.GaussianBlur( source, source, new Size(3, 3), 0, 0, Core.BORDER_DEFAULT );
        
        //convert to gray
        Imgproc.cvtColor(source, gray, Imgproc.COLOR_RGB2GRAY);
        
        //convert to laplacian
        Imgproc.Laplacian(gray, destination, ddepth, kernel_size, scale, delta, Core.BORDER_DEFAULT );
        
        // converting back to CV_8U
        Core.convertScaleAbs( destination, abs_dst);
        
        //set the result of image
        Image toSpatial = convertToBufferedImage(abs_dst);
        imgResult.setIcon(ResizeImageIcon(toSpatial));
        imgcode.imwrite( "C:/Users/HenHen/Documents/NetBeansProjects/Image-Enchantment-In-Spatial-Filtering/temp/spatial/spatial.jpg",abs_dst);
        return result = abs_dst;
    }
    
    //Sobel Detection Edge
    public Mat toSobel()
    {
        //Loading the OpenCV core library & get image for convert
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        
        Mat src_gray = new Mat();
        Mat grad = new Mat();
        
        int scale = 1;
        int delta = 0;
        int ddepth = CvType.CV_16S;

  
        //Instantiating the Imgcodecs class
        Imgcodecs imgcode = new Imgcodecs();
        
        //Reading Image
        Mat source = Imgcodecs.imread("C:/Users/henhen/Documents/NetBeansProjects/Image-Enchantment-In-Spatial-Filtering/temp/sub/sub.jpg");
        
        // Remove noise by blurring with a Gaussian filter ( kernel size = 3 )
        Imgproc.GaussianBlur( source, source, new Size(3, 3), 0, 0, Core.BORDER_DEFAULT );
        Imgproc.GaussianBlur( source, source, new Size(3, 3), 0, 0, Core.BORDER_DEFAULT );
        Imgproc.GaussianBlur( source, source, new Size(3, 3), 0, 0, Core.BORDER_DEFAULT );
        
        // Convert the image to grayscale
        Imgproc.cvtColor( source, src_gray, Imgproc.COLOR_RGB2GRAY );
        
        Mat grad_x = new Mat(), grad_y = new Mat();
        Mat abs_grad_x = new Mat(), abs_grad_y = new Mat();
        
        
        
        Imgproc.Sobel( src_gray, grad_x, ddepth, 1, 0, 3, scale, delta, Core.BORDER_DEFAULT );
        Imgproc.Sobel( src_gray, grad_y, ddepth, 0, 1, 3, scale, delta, Core.BORDER_DEFAULT );
        
        // converting back to CV_8U
        Core.convertScaleAbs( grad_x, abs_grad_x );
        Core.convertScaleAbs( grad_y, abs_grad_y );
        
        Core.addWeighted( abs_grad_x, 0.5, abs_grad_y, 0.5, 0, grad );

        //set the result of image
        Image toSobel = convertToBufferedImage(grad);
        imgResult.setIcon(ResizeImageIcon(toSobel));
        imgcode.imwrite("C:/Users/HenHen/Documents/NetBeansProjects/Image-Enchantment-In-Spatial-Filtering/temp/sobel/sobel.jpg", grad);
        return result = grad;
    }
    
    public Mat toSubstract()
    {
        //Loading the OpenCV core library & get image for convert
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        String filepath = txtPath.getText();    
        
         //Instantiating the Imgcodecs and Core class
        Imgcodecs imgcode = new Imgcodecs();
        Core core = new Core();
        
        //Reading Image
        Mat source1 = imgcode.imread(filepath);
        Mat source2 = imgcode.imread("C:/Users/HenHen/Documents/NetBeansProjects/Image-Enchantment-In-Spatial-Filtering/temp/spatial/spatial.jpg");
        
        //Creating matrix
        Mat destination = new Mat();
        
        //declare dtype
        int dtype = -1;
        
        // Subtracting Image
        Core.subtract(source1, source2, destination);
        
        //set the result of image
        Image toSubtract = convertToBufferedImage(destination);
        imgResult.setIcon(ResizeImageIcon(toSubtract));
        imgcode.imwrite("C:/Users/HenHen/Documents/NetBeansProjects/Image-Enchantment-In-Spatial-Filtering/temp/sub/sub.jpg", destination);
        
        return result = destination;
    }
    
    public Mat toAveraging()
    {
        //Loading the OpenCV core library & get image for convert
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        
        //Instantiating the Imgcodecs and Core class
        Imgcodecs imgcode = new Imgcodecs();
        Core core = new Core();
        
        //Reading Image
        Mat source = Imgcodecs.imread("C:/Users/henhen/Documents/NetBeansProjects/Image-Enchantment-In-Spatial-Filtering/temp/sobel/sobel.jpg");
        
        //Creating the destination matrix
        Mat destination = new Mat();
        
        //declaration kernel
        Size kernelSize = new Size(3,3);
        
        //decalaration anchor
        Point anchor = new Point(-1,-1);
        
        // Applying Blur effect on the Image
        Imgproc.blur(source, destination, kernelSize, anchor, Core.BORDER_DEFAULT);
        
        //set the result of image
        Image toAveraging = convertToBufferedImage(destination);
        imgResult.setIcon(ResizeImageIcon(toAveraging));
        imgcode.imwrite("C:/Users/HenHen/Documents/NetBeansProjects/Image-Enchantment-In-Spatial-Filtering/temp/averaging/avg.jpg", destination);
        
        return result = destination;
    }
    
    private void spatialFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spatialFilterActionPerformed
        // TODO add your handling code here:
        toLaplacian();
    }//GEN-LAST:event_spatialFilterActionPerformed

    private void btnSobelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSobelActionPerformed
        // TODO add your handling code here:
        toSobel();
    }//GEN-LAST:event_btnSobelActionPerformed

    private void btnSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubActionPerformed
        // TODO add your handling code here:
        toSubstract();
    }//GEN-LAST:event_btnSubActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        toAveraging();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseImage;
    private javax.swing.JButton btnSobel;
    private javax.swing.JButton btnSub;
    public static transient javax.swing.JLabel imgResult;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton spatialFilter;
    public static javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables
}
